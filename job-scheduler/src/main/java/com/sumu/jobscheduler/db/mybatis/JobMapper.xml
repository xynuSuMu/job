<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sumu.jobscheduler.scheduler.mapper.JobMapper">

    <insert id="insertJobDefinition"
            parameterType="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.definition.JobDefinitionEntity"
            useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
            insert into JOB_CUSTOM_JOB_DEFINITION(
            `app_id`,
            `job_name`,
            `job_desc`,
            `job_cron`,
            `enable`,
            `task_type`,
            `post_definition`
            )
            values (
            #{appId},
            #{jobName},
            #{jobDesc},
            #{cron},
            #{enable},
            #{taskType},
            #{postDefinitionID}
            )
    </insert>

    <update id="updateJobDefinition">
        update JOB_CUSTOM_JOB_DEFINITION
        <set>
            <if test="jobDefinition.appId>0">
                app_id = #{jobDefinition.appId},
            </if>
            <if test="jobDefinition.jobName!=null and jobDefinition.jobName!='' ">
                job_name = #{jobDefinition.jobName},
            </if>
            <if test="jobDefinition.jobDesc!=null and jobDefinition.jobDesc!='' ">
                job_desc = #{jobDefinition.jobDesc},
            </if>
            <if test="jobDefinition.cron!=null and jobDefinition.cron!='' ">
                job_cron = #{jobDefinition.cron},
            </if>
            <if test="jobDefinition.enable!=null">
                enable = #{jobDefinition.enable},
            </if>
            <if test="jobDefinition.taskType>0">
                task_type = #{jobDefinition.taskType},
            </if>
            <if test="jobDefinition.postDefinitionID > 0">
                post_definition = #{jobDefinition.postDefinitionID},
            </if>
        </set>
        <where>
            id = #{jobDefinition.id}
        </where>
    </update>

    <insert id="insertJavaJobDefinition"
            parameterType="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.definition.java.JavaJobDefinitionEntity"
            useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
            insert into JOB_CUSTOM_JOB_DEFINITION_JAVA(
            `definition_id`,
            `handler_name`,
            `strategy`,
            `shard_num`
            )
            values (
            #{definitionID},
            #{handlerName},
            #{strategy},
            #{shardNum}
            )
    </insert>


    <insert id="insertShellJobDefinition"
            parameterType="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.definition.shell.ShellJobDefinitionEntity"
            useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
            insert into JOB_CUSTOM_JOB_DEFINITION_SHELL(
            `definition_id`,
            `user`,
            `host`,
            `port`,
            `pwd`,
            `directory`,
            `file`,
            `param`
            )
            values (
            #{definitionID},
            #{user},
            #{host},
            #{port},
            #{password},
            #{directory},
            #{file},
            #{param}
            )
    </insert>

    <insert id="insertJobInstance"
            parameterType="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.instance.JobInstanceEntity"
            useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
           insert into JOB_CUSTOM_JOB_INSTANCE(
            `job_definition_id`,
            `start_time`,
            `trigger_type`
            )
            values (
                #{jobInstanceEntity.jobDefinitionId},
                #{jobInstanceEntity.startTime},
                #{jobInstanceEntity.triggerType}
            )
    </insert>

    <update id="updateJobInstance">
        update JOB_CUSTOM_JOB_INSTANCE
        <set>
            <if test="jobInstanceEntity.triggerWorker!=null and jobInstanceEntity.triggerWorker!=''">
                `trigger_worker` = #{jobInstanceEntity.triggerWorker},
            </if>
            <if test="jobInstanceEntity.triggerResult!=null or jobInstanceEntity.triggerResult!=''">
                `trigger_result` = #{jobInstanceEntity.triggerResult},
            </if>
            <if test="jobInstanceEntity.endTime!=null">
                `end_time` = #{jobInstanceEntity.endTime},
            </if>
        </set>
        where id = #{jobInstanceEntity.id}
    </update>


    <select id="count" resultType="java.lang.Integer">
        select count(id) from JOB_CUSTOM_JOB_DEFINITION
        <if test="jobDefinition!=null">
            where 1= 1
            <if test="jobDefinition.id > 0">
                and id = #{jobDefinition.id}
            </if>
            <if test="jobDefinition.appId > 0">
                and app_id = #{jobDefinition.appId}
            </if>
            <if test="jobDefinition.taskType > 0">
                and task_type = #{jobDefinition.taskType}
            </if>
            <if test="jobDefinition.jobName != null and jobDefinition.jobName !='' ">
                and job_name = #{jobDefinition.jobName}
            </if>
            <if test="jobDefinition.jobDesc != null and jobDefinition.jobDesc !='' ">
                and job_desc = #{jobDefinition.jobDesc}
            </if>
            <if test="jobDefinition.cron != null and jobDefinition.cron !='' ">
                and job_cron = #{jobDefinition.cron}
            </if>
            <if test="jobDefinition.enable != null ">
                and enable = #{jobDefinition.enable}
            </if>
            <if test="jobDefinition.postDefinitionID != null  and jobDefinition.postDefinitionID != ''">
                and post_definition = #{jobDefinition.postDefinitionID}
            </if>
        </if>
    </select>

    <select id="getJobDefinitions" resultMap="jobDefinitionMap">
        select
        <include refid="definition_field"/>
        from JOB_CUSTOM_JOB_DEFINITION
        <if test="jobDefinition!=null">
            where 1= 1
            <if test="jobDefinition.id > 0">
                and id = #{jobDefinition.id}
            </if>
            <if test="jobDefinition.appId > 0">
                and app_id = #{jobDefinition.appId}
            </if>
            <if test="jobDefinition.taskType > 0">
                and task_type = #{jobDefinition.taskType}
            </if>
            <if test="jobDefinition.jobName != null and jobDefinition.jobName !='' ">
                and job_name = #{jobDefinition.jobName}
            </if>
            <if test="jobDefinition.jobDesc != null and jobDefinition.jobDesc !='' ">
                and job_desc = #{jobDefinition.jobDesc}
            </if>
            <if test="jobDefinition.cron != null and jobDefinition.cron !='' ">
                and job_cron = #{jobDefinition.cron}
            </if>
            <if test="jobDefinition.enable != null ">
                and enable = #{jobDefinition.enable}
            </if>
            <if test="jobDefinition.postDefinitionID != null  and jobDefinition.postDefinitionID != ''">
                and post_definition = #{jobDefinition.postDefinitionID}
            </if>
        </if>
        <if test="page!=null">
            limit #{page.pageIndex},#{page.pageSize}
        </if>
    </select>

    <select id="getJavaJobDefinition" resultMap="javaJobDefinitionMap">
        select
        <include refid="java_definition_field"/>
        from JOB_CUSTOM_JOB_DEFINITION_JAVA
        <if test="javaJobDefinition!=null">
            where 1=1
            <if test="javaJobDefinition.id>0">
                and id = #{javaJobDefinition.id}
            </if>
            <if test="javaJobDefinition.definitionID>0">
                and definition_id = #{javaJobDefinition.definitionID}
            </if>
            <if test="javaJobDefinition.strategy>0">
                and strategy = #{javaJobDefinition.strategy}
            </if>
        </if>
    </select>

    <select id="getShellJobDefinition" resultMap="shellJobDefinitionMap">
        select
        <include refid="shell_definition_field"/>
        from JOB_CUSTOM_JOB_DEFINITION_SHELL
        <if test="shellJobDefinition!=null">
            where 1=1
            <if test="shellJobDefinition.id>0">
                and id = #{shellJobDefinition.id}
            </if>
            <if test="shellJobDefinition.definitionID>0">
                and definition_id = #{shellJobDefinition.definitionID}
            </if>
        </if>
    </select>


    <update id="removeJobDefinition">
        DELETE from JOB_CUSTOM_JOB_DEFINITION where id = #{id}
    </update>


    <sql id="definition_field">
          id,app_id,job_name,job_desc,job_cron,enable,task_type,post_definition
    </sql>

    <sql id="java_definition_field">
         id,definition_id,handler_name,strategy,shard_num
    </sql>

    <sql id="shell_definition_field">
         id,definition_id,`user`,`host`,`port`,`pwd`,`directory`,`file`,`param`
    </sql>

    <resultMap id="jobDefinitionMap"
               type="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.definition.JobDefinitionEntityImpl">
        <result property="id" column="id"/>
        <result property="appId" column="app_id"/>
        <result property="jobName" column="job_name"/>
        <result property="jobDesc" column="job_desc"/>
        <result property="cron" column="job_cron"/>
        <result property="enable" column="enable"/>
        <result property="taskType" column="task_type"/>
        <result property="postDefinitionID" column="post_definition"/>
    </resultMap>

    <resultMap id="javaJobDefinitionMap"
               type="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.definition.java.JavaJobDefinitionEntityImpl">
        <result property="id" column="id"/>
        <result property="definitionID" column="definition_id"/>
        <result property="handlerName" column="handler_name"/>
        <result property="strategy" column="strategy"/>
        <result property="shardNum" column="shard_num"/>
    </resultMap>
    <resultMap id="shellJobDefinitionMap"
               type="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.definition.shell.ShellJobDefinitionEntityImpl">
        <result property="id" column="id"/>
        <result property="definitionID" column="definition_id"/>
        <result property="user" column="user"/>
        <result property="host" column="host"/>
        <result property="port" column="port"/>
        <result property="password" column="pwd"/>
        <result property="directory" column="directory"/>
        <result property="file" column="file"/>
        <result property="param" column="param"/>
    </resultMap>

    <select id="countInstance" resultType="java.lang.Integer">
        select
        count(id)
        from JOB_CUSTOM_JOB_INSTANCE
        <if test="jobInstanceEntity!=null">
            where 1= 1
            <if test="jobInstanceEntity.id > 0">
                and id = #{jobInstanceEntity.id}
            </if>
            <if test="jobInstanceEntity.jobDefinitionId > 0">
                and job_definition_id = #{jobInstanceEntity.jobDefinitionId}
            </if>
        </if>
    </select>

    <select id="jobInstanceList" resultMap="jobInstanceMap">
        select
        <include refid="instance_column_field"/>
        from JOB_CUSTOM_JOB_INSTANCE
        <if test="jobInstanceEntity!=null">
            where 1= 1
            <if test="jobInstanceEntity.id > 0">
                and id = #{jobInstanceEntity.id}
            </if>
            <if test="jobInstanceEntity.jobDefinitionId > 0">
                and job_definition_id = #{jobInstanceEntity.jobDefinitionId}
            </if>
        </if>
        <if test="page!=null">
            limit #{page.pageIndex},#{page.pageSize}
        </if>

    </select>

    <sql id="instance_column_field">
        id,job_definition_id,start_time,end_time,trigger_type,trigger_worker,trigger_result
    </sql>

    <resultMap id="jobInstanceMap"
               type="com.sumu.jobscheduler.scheduler.interceptor.command.entity.data.job.instance.JobInstanceEntityImpl">
        <result property="id" column="id"/>
        <result property="jobDefinitionId" column="job_definition_id"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="triggerType" column="trigger_type"/>
        <result property="triggerWorker" column="trigger_worker"/>
        <result property="triggerResult" column="trigger_result"/>
    </resultMap>

</mapper>
